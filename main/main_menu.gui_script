-- -----------------------------------------------------------------------------
-- file: menu.gui_script
--
-- Tutorial #6 - Initial Menu and Level Procedures
--
-- -----------------------------------------------------------------------------

-- Declare local variable constants


-- -----------------------------------------------------------------------------
-- Button Animation Functions

local function animateButton4(self, node)
    -- animate scale to 100%
    local s = 1
    gui.animate(node, gui.PROP_SCALE, vmath.vector4(s, s, s, 0), gui.EASING_INOUT, 0.12, 0)
end

local function animateButton3(self, node)
    -- animate scale to 106%
    local s = 1.06
    gui.animate(node, gui.PROP_SCALE, vmath.vector4(s, s, s, 0), gui.EASING_INOUT, 0.12, 0, animateButton4)
end

local function animateButton2(self, node)
    -- animate scale to 98%
    local s = 0.98
    gui.animate(node, gui.PROP_SCALE, vmath.vector4(s, s, s, 0), gui.EASING_INOUT, 0.12, 0, animateButton3)
end

local function animateButton1(node, d)
	print("Starting anim1()")
    -- set scale to 70%
    local start_scale = 0.7
    gui.set_scale(node, vmath.vector4(start_scale, start_scale, start_scale, 0))

    -- get current color and set alpha to 0 to fade up
    local from_color = gui.get_color(node)
    local to_color = gui.get_color(node)
    from_color.w = 0
    gui.set_color(node, from_color)

    -- animate alpha value from 0 to 1
    gui.animate(node, gui.PROP_COLOR, to_color, gui.EASING_IN, 0.2, d)

    -- animate scale from %70 to 110%
    local s = 1.1
    gui.animate(node, gui.PROP_SCALE, vmath.vector4(s, s, s, 0), gui.EASING_IN, 0.2, d, animateButton2)
end

-- -----------------------------------------------------------------------------

local function animateButtonPress(node, d)
    
    -- get the current color and set alpha to 0.85 to fade the button
    local from_color = gui.get_color(node)
    local to_color = gui.get_color(node)
    from_color.w = 0.85
    gui.set_color(node, from_color)

    -- animate alpha value from current to to_color
    gui.animate(node, gui.PROP_COLOR, to_color, gui.EASING_IN, 0.1, d)

    -- animate scale up to 95% 
    local s = 0.95
    gui.animate(node, gui.PROP_SCALE, vmath.vector4(s, s, s, 0), gui.EASING_IN, 0.1, d)
end


local function animateButtonRelease(node, d)

    -- animate scale back to 100%
    local s = 1.0
    gui.animate(node, gui.PROP_SCALE, vmath.vector4(s, s, s, 0), gui.EASING_IN, 0.1, d)
    
end

-- -----------------------------------------------------------------------------
-- Main Functions

function init(self)
	msg.post(".", "acquire_input_focus")

    animateButton1(gui.get_node("selectLevel2"), 0.4)
    animateButton1(gui.get_node("selectLevel1"), 0.2)
	

end

function on_input(self, action_id, action)
	
	-- Process Level 1 Touch
	if action.pressed and gui.pick_node(gui.get_node("selectLevel1"), action.x, action.y) then
		gui.play_flipbook(gui.get_node("selectLevel1"), hash("pressedButton2"))
	end
	
	if action.released and gui.pick_node(gui.get_node("selectLevel1"), action.x, action.y) then
		gui.play_flipbook(gui.get_node("selectLevel1"), hash("releasedButton"))
		msg.post("/main#script", "start_level1")
	end	
	
	-- Process Level 2 Touch
	if action.pressed and gui.pick_node(gui.get_node("selectLevel2"), action.x, action.y) then
		gui.play_flipbook(gui.get_node("selectLevel2"), hash("pressedButton2"))
	end
	
	if action.released and gui.pick_node(gui.get_node("selectLevel2"), action.x, action.y) then
		gui.play_flipbook(gui.get_node("selectLevel2"), hash("releasedButton"))
		msg.post("/main#script", "start_level2")
	end

	
end
	





